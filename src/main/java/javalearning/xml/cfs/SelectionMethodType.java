//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.06.14 at 11:04:31 AM AEST 
//


package javalearning.xml.cfs;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for SelectionMethodType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="SelectionMethodType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="CacDialed"/>
 *     &lt;enumeration value="CustPresubscribed"/>
 *     &lt;enumeration value="NetworkDefault"/>
 *     &lt;enumeration value="CustPresubIndSent"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "SelectionMethodType")
@XmlEnum
public enum SelectionMethodType {


    /**
     * The subscriber dialled a Carrier Access Code.
     *           
     * 
     */
    @XmlEnumValue("CacDialed")
    CAC_DIALED("CacDialed"),

    /**
     * The subscriber is pre-subscribed to the Carrier.
     *           
     * 
     */
    @XmlEnumValue("CustPresubscribed")
    CUST_PRESUBSCRIBED("CustPresubscribed"),

    /**
     * The Carrier is a network-wide default for this type of
     *             call.
     *           
     * 
     */
    @XmlEnumValue("NetworkDefault")
    NETWORK_DEFAULT("NetworkDefault"),

    /**
     * The carrier to be selected was indicated in the
     *             signaling.
     *           
     * 
     */
    @XmlEnumValue("CustPresubIndSent")
    CUST_PRESUB_IND_SENT("CustPresubIndSent");
    private final String value;

    SelectionMethodType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SelectionMethodType fromValue(String v) {
        for (SelectionMethodType c: SelectionMethodType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
