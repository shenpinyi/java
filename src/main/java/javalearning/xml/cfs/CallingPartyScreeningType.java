//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.06.14 at 11:04:31 AM AEST 
//


package javalearning.xml.cfs;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for CallingPartyScreeningType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="CallingPartyScreeningType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="User Provided - Unverified"/>
 *     &lt;enumeration value="User Provided - Failed"/>
 *     &lt;enumeration value="User Provided"/>
 *     &lt;enumeration value="Network Provided"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "CallingPartyScreeningType")
@XmlEnum
public enum CallingPartyScreeningType {


    /**
     * The calling number was user provided and has not been
     *             verified.
     *           
     * 
     */
    @XmlEnumValue("User Provided - Unverified")
    USER_PROVIDED_UNVERIFIED("User Provided - Unverified"),

    /**
     * The calling number was user provided and verification
     *             of it failed.
     *           
     * 
     */
    @XmlEnumValue("User Provided - Failed")
    USER_PROVIDED_FAILED("User Provided - Failed"),

    /**
     * The calling number was user provided.
     *           
     * 
     */
    @XmlEnumValue("User Provided")
    USER_PROVIDED("User Provided"),

    /**
     * The calling number was provided by the network.
     *           
     * 
     */
    @XmlEnumValue("Network Provided")
    NETWORK_PROVIDED("Network Provided");
    private final String value;

    CallingPartyScreeningType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CallingPartyScreeningType fromValue(String v) {
        for (CallingPartyScreeningType c: CallingPartyScreeningType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
